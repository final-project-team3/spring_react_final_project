<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fproject.project_team3.mapper.ProductMapper">
    <!-- HSH -->
    <select id="getKind" resultType="com.fproject.project_team3.dto.product.ProductKindDto">
        SELECT distinct product_gender
        FROM product_kind
        order by product_gender
    </select>

    <select id="getSmallKind" resultType="com.fproject.project_team3.dto.product.ProductKindDto">
        SELECT product_small_kind
        FROM product_kind
        WHERE product_gender = #{productBigKind}
    </select>

    <select id="getSearchProductList" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_name LIKE CONCAT('%', #{searchContent}, '%')
    </select>

    <insert id="productInfoInsert" parameterType="com.fproject.project_team3.dto.product.ProductInfoDto">
        INSERT INTO product_info(product_kind_num, product_name, product_price, product_seller_id,
                                 product_registration_date, product_img, product_content, review_star_point,
                                 product_delivery_day, product_seller_business_name)
        VALUES (#{productKindNum}, #{productName}, #{productPrice}, #{productSellerId},
                DATE_FORMAT(now(), '%Y-%m-%d'), #{productImg}, "testContent", "3", "2", #{productSellerBusinessName})
    </insert>

    <select id="getProductInfoLatest" resultType="String">
        SELECT product_num
        FROM product_info
        ORDER BY product_num DESC LIMIT 1;
    </select>

    <insert id="productOptionInsert" parameterType="com.fproject.project_team3.dto.product.ProductOptionDto">
        INSERT INTO product_option(product_num, product_coupon_useable, product_option_1,
        product_option_2, product_quantity, product_option_price)
        VALUES
        <foreach item="item" collection="list" separator=",">
            (#{item.productNum}, #{item.productCouponUseable}, #{item.productOption1}, #{item.productOption2},
            #{item.productQuantity}, #{item.productOptionPrice})
        </foreach>
    </insert>

    <select id="getProductList" resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        ORDER BY product_num DESC;
    </select>

    <select id="getProductInfoFromDetail" parameterType="Object"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_num = #{productNum};
    </select>

    <select id="getProductOptionList" parameterType="Object"
            resultType="com.fproject.project_team3.dto.product.ProductOptionDto">
        SELECT *
        FROM product_option
        WHERE product_num = #{productNum};
    </select>

    <select id="getSellerProductList" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_seller_business_name = #{productSellerBusinessName}
    </select>

    <select id="getSellerNameToSellerInfo" parameterType="String"
            resultType="com.fproject.project_team3.dto.seller.SellerInfoDto">
        SELECT *
        FROM seller_info
        WHERE seller_business_name = #{productSellerBusinessName}
    </select>

    <select id="categoryProductList" parameterType="Object"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_kind_num = #{kindNum}
    </select>

    <select id="getKindNum" parameterType="String" resultType="Integer">
        SELECT product_kind_num
        FROM product_kind
        WHERE product_gender = #{bigKind}
          AND product_small_kind = #{smallKind}
    </select>

    <insert id="searchContentTotalInsert" parameterType="String">
        INSERT INTO search(search_content)
        VALUES (#{searchContent})
    </insert>

    <select id="searchContentCheck" parameterType="String" resultType="int">
        SELECT COUNT(search_content)
        FROM search
        WHERE search_content = #{searchContent}
    </select>

    <update id="searchContentTotalUpdate" parameterType="String">
        UPDATE search
        SET search_count = search_count + 1
        WHERE search_content = #{searchContent}
    </update>

    <select id="getSearchTotal10" resultType="com.fproject.project_team3.dto.product.SearchDto">
        SELECT *
        FROM search
        ORDER BY search_count DESC LIMIT 10;
    </select>

    <select id="productInterestedCheck" parameterType="Object" resultType="int">
        SELECT COUNT(product_num)
        FROM user_interested_list
        WHERE user_id = #{userId}
          AND product_num = #{productNum}
    </select>

    <insert id="productInterestedInsert" parameterType="Object">
        INSERT INTO user_interested_list (product_num, user_id)
        VALUES (#{productNum}, #{userId})
    </insert>

    <select id="getLikeProducts" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info as pi
                 INNER JOIN user_interested_list as uil
                            ON pi.product_num = uil.product_num
        WHERE uil.user_id = #{userId}
        ORDER BY uil.user_interested_list_num DESC;
    </select>

    <delete id="deleteProductLikeItem" parameterType="Object">
        DELETE
        FROM user_interested_list
        WHERE user_id = #{userId}
          AND product_num = #{productNum}
    </delete>

    <select id="getProductSellerInfo" parameterType="int"
            resultType="com.fproject.project_team3.dto.seller.SellerInfoDto">
        SELECT *
        FROM seller_info as sInfo
                 INNER JOIN product_info as pi
                            ON pi.product_seller_id = sInfo.seller_id
        WHERE pi.product_num = #{productNum}
    </select>

    <select id="getSellerIdProductList" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_seller_id = #{sellerId}
    </select>

    <delete id="deleteProduct" parameterType="int">
        DELETE FROM product_info
        WHERE product_num = #{productNum};
    </delete>

    <!-- HSH -->

    <!-- LYS -->

    <!-- LYS -->

    <!-- GJY -->
    <select id="getProductSelectList" resultType="com.fproject.project_team3.dto.product.ProductKindDto">
        SELECT distinct product_gender
        FROM product_kind
        order by product_gender
    </select>

    <select id="getProductSmallSelectList" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductKindDto">
        SELECT product_small_kind
        FROM product_kind
        where product_gender = #{productKind}
    </select>

    <!--    <select id="getSelectTestData" parameterType="int" resultType="com.fproject.project_team3.dto.gwak.GwakTestTblDto">-->
    <!--        SELECT img-->
    <!--        FROM gwak_test_tbl-->
    <!--        where idx = #{idx}-->
    <!--    </select>-->

    <insert id="getSelectTestData" parameterType="byte">
        insert
        gwak_test_tbl
    (img)
    value (
        #{img}
        );
    </insert>

    <!--  신규상품 정보 등록 -->
    <insert id="insertProductData" parameterType="com.fproject.project_team3.dto.product.ProductInfoDto">
        INSERT INTO product_info(product_num, product_kind_num, product_name, product_price, product_seller_id,
                                 product_registration_date, product_img, product_content, review_star_point,
                                 product_delivery_day, product_qty)
        VALUES (null, #{productKindNum}, #{productName}, #{productPrice}, #{productSellerId},
                DATE_FORMAT(now(), '%Y-%m-%d'), #{productImg}, "testContent", "3", "2", #{productQty});
    </insert>

    <!--    제품 이름 중복 검사 -->
    <select id="checkProductName" parameterType="com.fproject.project_team3.dto.product.ProductInfoDto"
            resultType="int">
        SELECT COUNT(product_name)
        FROM product_info
        where product_seller_id = #{productSellerId}
          AND product_name = #{productName}
    </select>

    <!-- 제품 수정 - 수정 전 정보 가져오기 -->
    <select id="getProductInfo" parameterType="String"
            resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT *
        FROM product_info
        WHERE product_seller_id = #{productSellerId}
          AND product_name = #{productName}
    </select>

    <!-- 카테고리 번호로 카테고리 값 가져오기 -->
    <select id="getProductKind" parameterType="int" resultType="com.fproject.project_team3.dto.product.ProductKindDto">
        SELECT *
        FROM product_kind
        WHERE product_kind_num = #{productKindNum}
    </select>

    <select id="selectOptionData" parameterType="int"
            resultType="com.fproject.project_team3.dto.product.ProductOptionDto">
        SELECT *
        FROM product_option
        WHERE product_num = #{productNum}
    </select>

    <!--  info 업데이트 -->
    <update id="productInfoUpdate" parameterType="Object">
        UPDATE product_info
        SET product_name    = #{productName},
            product_price   = #{productPrice},
            product_content = #{productContent},
            product_img     = #{productImg}
        WHERE product_num = #{productNum}
    </update>


    <update id="productOptionUpdate" parameterType="Object">
        UPDATE
            product_option
        SET product_option_1       = #{productOption1}
          , product_option_2       = #{productOption2}
          , product_quantity       = #{productQuantity}
          , product_option_price   = #{productOptionPrice}
          , product_coupon_useable = #{productCouponUseable}

        WHERE product_option_num = #{productOptionNum}
    </update>


    <!--    이번 달 등록된 상품 최신순으로 4개 가져오기 -->
    <select id="thisMonthData" resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT FORMAT(product_price, 0) productPrice,
               product_num,
               product_seller_id,
               product_seller_business_name,
               product_kind_num,
               product_name,
               product_content,
               product_img,
               product_registration_date,
               review_star_point,
               product_delivery_day
        FROM product_info
        where product_registration_date between date_format(now(), '%Y-%m-01') and last_day(now())
        ORDER BY product_registration_date DESC limit 4;

    </select>

    <!--    랜덤 데이터 7개 가져오기 -->
    <select id="randomData" resultType="com.fproject.project_team3.dto.product.ProductInfoDto">
        SELECT FORMAT(product_price, 0) productPrice,
               product_num,
               product_seller_id,
               product_seller_business_name,
               product_kind_num,
               product_name,
               product_content,
               product_img,
               product_registration_date,
               review_star_point,
               product_delivery_day
        FROM product_info
        ORDER BY RAND() LIMIT 7;
    </select>
    <!-- GJY -->

    <!-- BJH -->

    <!-- BJH -->

    <!-- LSH -->

    <!-- LSH -->
</mapper>
